name: nca

networks:
  oni-staging:
  oni-prod:
  nca:

volumes:
  db:
  oni-batches:
  oni-staging-data-mariadb:
  oni-staging-data-solr:
  oni-prod-data-mariadb:
  oni-prod-data-solr:
  issue-cache:
  nca-workflow:
  page-review:
  sftpgo-basedir:
  sftpgo-backups:
  sftpgo-home:
  agent-staging-rsa:
  agent-prod-rsa:

services:
  #####
  # NCA
  #####
  db:
    image: mariadb
    environment:
      - MYSQL_ROOT_PASSWORD=123456
      - MYSQL_DATABASE=nca
      - MYSQL_USER=nca
      - MYSQL_PASSWORD=nca
    volumes:
      - ./docker/mysql/:/etc/mysql/conf.d:Z
      - db:/var/lib/mysql
    networks:
      nca:

  iiif:
    image: uolibraries/rais:4-alpine
    environment:
      - RAIS_IIIFWEBPATH=/images/iiif
      - RAIS_TILECACHELEN=250
      - RAIS_TILEPATH=/var/local/workflow
    volumes:
      - nca-workflow:/var/local
    expose:
      - 12415
    networks:
      nca:

  # Web runs the binary for nca's GUI
  web:
    build:
      context: .
      dockerfile: ./docker/Dockerfile-app
    volumes:
      - issue-cache:/var/local/news/nca/cache
      - nca-workflow:/mnt/news
      - sftpgo-basedir:/mnt/sftpgo
      - page-review:/mnt/page-review
      - oni-batches:/mnt/batches
    environment:
      - NCA_DB_HOST=db
      - NCA_SFTP_API_URL=http://sftpgo:8080/api/v2
      - NCA_SFTP_USER=admin
      - NCA_SFTP_PASSWORD=password
      - NCA_PDF_UPLOAD_PATH=/mnt/sftpgo/data
      - NCA_PDF_PAGE_REVIEW_PATH=/mnt/page-review
      - NCA_BATCH_PRODUCTION_PATH=/mnt/batches
    expose:
      - 8080
    depends_on:
      - db
      - sftpgo
      - iiif
    command: ./bin/server -c ./settings
    networks:
      nca:

  sftpgo:
    image: drakkan/sftpgo:v2.5-alpine
    volumes:
      - sftpgo-basedir:/srv/sftpgo
      - sftpgo-backups:/srv/sftpgo/backups
      - sftpgo-home:/var/lib/sftpgo
    expose:
      - 8080
      - 2022
    environment:
      - SFTPGO_DATA_PROVIDER__CREATE_DEFAULT_ADMIN=true
      - SFTPGO_DEFAULT_ADMIN_USERNAME=admin
      - SFTPGO_DEFAULT_ADMIN_PASSWORD=password
    networks:
      nca:

  workers:
    extends: web
    command: ./bin/run-jobs -c ./settings watchall
    networks:
      nca:

  proxy:
    image: nginx:1.15
    volumes:
      - ./docker/nginx/nca.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - web
      - iiif
      - sftpgo
    networks:
      nca:

  #####
  # Agent
  #####
  oni-agent-staging:
    build:
      context: .
      dockerfile: ./docker/Dockerfile-oni
      target: agent
    volumes:
      - oni-batches:/mnt/batches
      - agent-staging-rsa:/etc/rsa/
    depends_on:
      - oni-staging-db
      - oni-staging-solr
    environment:
      - BA_BIND=:22
      - HOST_KEY_FILE=/etc/rsa/oni-agent
      - ONI_LOCATION=/opt/openoni/
      - BATCH_SOURCE=/mnt/batches
      - DB_CONNECTION=openoni:openoni@tcp(oni-staging-db:3306)/openoni
    expose:
      - 22
    networks:
      oni-staging:
      nca:

  oni-agent-prod:
    build:
      context: .
      dockerfile: ./docker/Dockerfile-oni
      target: agent
    volumes:
      - oni-batches:/mnt/batches
      - agent-prod-rsa:/etc/rsa/
    depends_on:
      - oni-prod-db
      - oni-prod-solr
    environment:
      - BA_BIND=:22
      - HOST_KEY_FILE=/etc/rsa/oni-agent
      - ONI_LOCATION=/opt/openoni/
      - BATCH_SOURCE=/mnt/batches
      - DB_CONNECTION=openoni:openoni@tcp(oni-prod-db:3306)/openoni
    expose:
      - 22
    networks:
      oni-prod:
      nca:

  #####
  # Open ONI: Staging
  #####
  oni-staging-db:
    image: mariadb:10.6
    environment:
      - MYSQL_ROOT_PASSWORD=123456
      - MYSQL_DATABASE=openoni
      - MYSQL_USER=openoni
      - MYSQL_PASSWORD=openoni
    volumes:
      - ./repos/open-oni/conf/mysql/:/etc/mysql/conf.d:Z
      - oni-staging-data-mariadb:/var/lib/mysql
    networks:
      oni-staging:
        aliases:
          - rdbms

  oni-staging-solr:
    image: solr:8-slim
    volumes:
      - oni-staging-data-solr:/var/solr
    command:
      - solr-precreate
      - openoni
    networks:
      oni-staging:
        aliases:
          - solr

  oni-staging:
    build:
      context: .
      dockerfile: ./docker/Dockerfile-oni
      target: oni
    volumes:
      - oni-batches:/mnt/batches
    depends_on:
      - oni-staging-db
      - oni-staging-solr
      - oni-iiif
    environment:
      - APACHE_LOG_LEVEL=info
      - ONI_DEBUG=1
    networks:
      oni-staging:

  #####
  # Open ONI: Production
  #####
  oni-prod-db:
    image: mariadb:10.6
    environment:
      - MYSQL_ROOT_PASSWORD=123456
      - MYSQL_DATABASE=openoni
      - MYSQL_USER=openoni
      - MYSQL_PASSWORD=openoni
    volumes:
      - ./repos/open-oni/conf/mysql/:/etc/mysql/conf.d:Z
      - oni-prod-data-mariadb:/var/lib/mysql
    networks:
      oni-prod:
        aliases:
          - rdbms

  oni-prod-solr:
    image: solr:8-slim
    volumes:
      - oni-prod-data-solr:/var/solr
    command:
      - solr-precreate
      - openoni
    networks:
      oni-prod:
        aliases:
          - solr

  oni-prod:
    build:
      context: .
      dockerfile: ./docker/Dockerfile-oni
      target: oni
    volumes:
      - oni-batches:/mnt/batches
    depends_on:
      - oni-prod-db
      - oni-prod-solr
      - oni-iiif
    environment:
      - APACHE_LOG_LEVEL=warn
      - ONI_DEBUG=0
    networks:
      oni-prod:

  #####
  # IIIF for both ONIs
  #####
  oni-iiif:
    image: uolibraries/rais:4-alpine
    environment:
      - RAIS_IIIFWEBPATH=/images/iiif
      - RAIS_TILECACHELEN=250
      - RAIS_TILEPATH=/mnt/batches
    volumes:
      - oni-batches:/mnt/batches
    networks:
      oni-staging:
        aliases:
          - rais
      oni-prod:
        aliases:
          - rais
