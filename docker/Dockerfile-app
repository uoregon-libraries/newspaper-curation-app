FROM golang:1 AS build
LABEL maintainer="Jeremy Echols <jechols@uoregon.edu>"

# Dependencies for the build
RUN go install github.com/mgechev/revive@latest
RUN go install golang.org/x/tools/cmd/goimports@latest

WORKDIR /usr/local/src/nca

# Grab and build the source before worrying about config files so when config
# changes we aren't having to rebuild everything
COPY ./Makefile /usr/local/src/nca/Makefile
COPY ./scripts /usr/local/src/nca/scripts
COPY ./src /usr/local/src/nca/src
COPY ./go.mod /usr/local/src/nca/go.mod
COPY ./go.sum /usr/local/src/nca/go.sum
COPY ./revive.toml /usr/local/src/nca/revive.toml
RUN make

WORKDIR /opt/sudo
COPY ./docker/sudo.go /opt/sudo/sudo.go
RUN go build ./sudo.go

# This image is used both for the workers and the web server containers; this
# is not a great practice.  In a production environment you probably would want
# a much slimmer web server that only had the "server" binary and the static
# files and templates.  The worker system would need a bit more, like the
# openjpeg tools, poppler, etc., but still wouldn't need the whole Go stack or
# a Maria DB client.
FROM rockylinux:9 AS app
LABEL maintainer="Jeremy Echols <jechols@uoregon.edu>"

RUN dnf update -y && dnf upgrade --refresh -y
RUN dnf install -y 'dnf-command(config-manager)'
RUN dnf config-manager --set-enabled crb
RUN dnf install -y epel-release
RUN dnf install -y libpng-devel libtiff-devel
RUN dnf install -y poppler-utils openjpeg2-tools GraphicsMagick ghostscript mariadb jq

# NCA binaries are pulled from the build image
WORKDIR /usr/local/nca
RUN mkdir -p /usr/local/nca
COPY --from=build /usr/local/src/nca/bin /usr/local/nca/bin
COPY --from=build /opt/sudo/sudo /bin/sudo

# NCA support files: SFTPGo helper scripts, web server dependencies, and the
# settings file
COPY ./sftpgo/*.sh /usr/local/nca/sftpgo/
COPY ./static /usr/local/nca/static
COPY ./templates /usr/local/nca/templates
COPY ./settings-example /usr/local/nca/settings

# Utilities
COPY ./docker/wait_for_database /usr/local/bin/
COPY ./docker/entrypoint.sh /entrypoint.sh

# Get the cache directory prepared
RUN mkdir -p /var/local/news/nca/cache

ENTRYPOINT ["/entrypoint.sh"]
