<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Setup and Installation on Newspaper Curation App</title>
    <link>https://uoregon-libraries.github.io/newspaper-curation-app/setup/</link>
    <description>Recent content in Setup and Installation on Newspaper Curation App</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="https://uoregon-libraries.github.io/newspaper-curation-app/setup/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Services and Apps</title>
      <link>https://uoregon-libraries.github.io/newspaper-curation-app/setup/services/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://uoregon-libraries.github.io/newspaper-curation-app/setup/services/</guid>
      <description>You should at least understand everything in this document at a high level before moving on to the setup/installation documents, as the NCA suite is a set of tools, not a single application that does it all.
Overview NCA has two key services which you&amp;rsquo;ll have to have running in the background at all times, several binaries you&amp;rsquo;ll need to use occasionally for regular tasks, and of course the various external services (such as a IIIF server, SFTP server, MySQL / MariaDB, Apache / nginx, Open ONI and the ONI Agent, etc.</description>
    </item>
    
    <item>
      <title>Server Setup</title>
      <link>https://uoregon-libraries.github.io/newspaper-curation-app/setup/server-setup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://uoregon-libraries.github.io/newspaper-curation-app/setup/server-setup/</guid>
      <description>Human Requirements Unfortunately, this process is still technical enough that you will need a devops person to at least get the system set up for processing. You&amp;rsquo;ll also need people who can reorder PDF pages (if necessary) as well as people who can enter and review newspaper issue metadata.
Somebody will want to monitor the output from the various automated processes, such as QCing generated batches on a staging server prior to loading in production, as there is still a great deal of room for human error.</description>
    </item>
    
    <item>
      <title>Installation</title>
      <link>https://uoregon-libraries.github.io/newspaper-curation-app/setup/installation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://uoregon-libraries.github.io/newspaper-curation-app/setup/installation/</guid>
      <description>Development If you&amp;rsquo;re developing on NCA, installation will differ from standing up a production server. Please see our Development Guide.
Preliminary Setup Manual installation has several prerequisites:
Poppler Utils for PDF processing OpenJPEG 2 + command-line tools for JP2 generation GhostScript GraphicsMagick MariaDB A IIIF server capable of handling tiled JP2 files without a ton of overhead (e.g., RAIS) Apache/nginx for authentication as well as proxying to NCA and the IIIF server Two running Open ONI applications: staging and production.</description>
    </item>
    
    <item>
      <title>Users</title>
      <link>https://uoregon-libraries.github.io/newspaper-curation-app/setup/user-setup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://uoregon-libraries.github.io/newspaper-curation-app/setup/user-setup/</guid>
      <description>Once the applications are installed and configured, you&amp;rsquo;ll need an admin user. Start the NCA server in debug mode:
./bin/server -c ./settings --debug This lets you fake an admin login via http://your.site/users?debuguser=admin. You can then set up other users as necessary. Once you have Apache set up to do the authentication, you should never run in debug mode on production servers.
For development use, scripts/localdev.sh already runs the server in debug mode.</description>
    </item>
    
    <item>
      <title>Onboarding A Publisher</title>
      <link>https://uoregon-libraries.github.io/newspaper-curation-app/setup/creating-publishers/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://uoregon-libraries.github.io/newspaper-curation-app/setup/creating-publishers/</guid>
      <description>Creating a publisher in NCA, at least for UO, requires several manual processes take place:
Upload a MARC record for the title, and then edit them to provide SFTP credentials. Set up a user for sftp access if you aren&amp;rsquo;t using the SFTPGo integration (but you really should, it&amp;rsquo;s way easier) </description>
    </item>
    
    <item>
      <title>SFTPGo Integration</title>
      <link>https://uoregon-libraries.github.io/newspaper-curation-app/setup/sftpgo-integration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://uoregon-libraries.github.io/newspaper-curation-app/setup/sftpgo-integration/</guid>
      <description>SFTPGo is an sftp server that exposes APIs and a web interface for administration tasks. We&amp;rsquo;ve chosen to integrate NCA with SFTPGo in order to simplify the process of creating titles for a publisher that&amp;rsquo;s uploading newspaper PDFs.
If you choose not to use this integration, publisher uploads will have to be managed entirely by you (as was the case prior to this integration), and NCA will not track SFTP data (which is a change from NCA 3.</description>
    </item>
    
  </channel>
</rss>
