<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Contributing on Newspaper Curation App</title>
    <link>https://uoregon-libraries.github.io/newspaper-curation-app/contributing/</link>
    <description>Recent content in Contributing on Newspaper Curation App</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="https://uoregon-libraries.github.io/newspaper-curation-app/contributing/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Developer&#39;s Guide</title>
      <link>https://uoregon-libraries.github.io/newspaper-curation-app/contributing/dev-guide/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://uoregon-libraries.github.io/newspaper-curation-app/contributing/dev-guide/</guid>
      <description>It is assumed developers will use Docker for dependencies outside this repository: database, RAIS (IIIF server), the ONI Agent (there&amp;rsquo;s a dev version available for testing), and SFTPGo. The rest of the tools are most easily installed locally, and the NCA binaries themselves are in fact easier by far to install locally versus building them in an image when code changes.
Requirements / Setup Local dependencies A supported version of Go (e.</description>
    </item>
    
    <item>
      <title>Not Compiling Locally</title>
      <link>https://uoregon-libraries.github.io/newspaper-curation-app/contributing/not-compiling-locally/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://uoregon-libraries.github.io/newspaper-curation-app/contributing/not-compiling-locally/</guid>
      <description>If you want to compile NCA inside a container, you are for the most part on your own. It&amp;rsquo;s doable and pretty easy, but it&amp;rsquo;s not part of the steps we&amp;rsquo;re going to outline, because it adds some annoyances.
Why is it best to compile on your local machine instead of inside a container?
Go is not Ruby / Python / PHP / node. You aren&amp;rsquo;t installing a systemwide runtime or futzing with things like rbenv, nvm, virtualenv, composer, &amp;hellip;.</description>
    </item>
    
    <item>
      <title>Contributing to Documentation</title>
      <link>https://uoregon-libraries.github.io/newspaper-curation-app/contributing/documentation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://uoregon-libraries.github.io/newspaper-curation-app/contributing/documentation/</guid>
      <description>The documentation for this site is produced using Hugo and a custom theme based on the look and feel of TechDoc, a contributed Hugo theme.
We want our documentation to help you use NCA (okay, again, if I&amp;rsquo;m being honest, this is really just for UO to remember how to use our app), and as such the documentation itself needs to be easy to edit and keep up-to-date.
Starting out Get Hugo installed.</description>
    </item>
    
    <item>
      <title>Testing</title>
      <link>https://uoregon-libraries.github.io/newspaper-curation-app/contributing/testing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://uoregon-libraries.github.io/newspaper-curation-app/contributing/testing/</guid>
      <description>Unit Testing Running unit tests is easy:
make test This compiles all of the code and tests any *_test.go files. Test coverage is spotty at best right now, but the compile-time checks, and static analysis run by make, catch most of the kinds of problems you&amp;rsquo;d test for in PHP/Ruby/Python/etc (variable typos, misuse of a function, etc.)
Contributors: feel free to add more unit tests to improve overall coverage!
Manual Testing Manually testing NCA can be time-consuming, as you have to find, copy, and then load issues into NCA, enter metadata, etc.</description>
    </item>
    
  </channel>
</rss>
